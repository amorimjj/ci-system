// Import Bootstrap Compass integration
@import "bootstrap-compass";

// Import custom Bootstrap variables
@import "bootstrap-variables";

// Import Bootstrap for Sass
@import "bootstrap";

// Import Base
@import "base";

body {
    font-size: $font-size;
    color: $gray;
    background: $background-color;
}

table {
    margin-top: 5em;
    border: 2px solid $smooth-gray;
    border-left: 0;
    background-color: $white;
}

th {
    font-size: $font-size;
    line-height: $font-size * 2.5 !important;
}

td {
    line-height: $font-size * 4 !important;
}

th:first-child{
    border-left:5px solid $smooth-gray;
    padding-left: 5em !important;
}

th:last-child{
    min-width: 100px;
}

.strong-labels {
    font-weight: 500;
    font-size: $font-size * 1;
    line-height: $font-size * 3.63 !important;
}

tr.selected {
    td.build-status {
        background-color: $background-color;
        font-size: $font-size * 2;
        line-height: 1em !important;
        vertical-align: middle;
        text-align: center;
    }
}

td:last-child {
    @extend .strong-labels;
}

td:first-child {
    @extend .strong-labels;
    @extend th:first-child;
    font-weight: 400;
}

.hflip {
  @include hflip;
}

.circle-symbols {
    @extend .circle;
    width:$font-size*1.5;
    height:$font-size*1.5;
    font-size:$font-size*0.6;
    position: relative;
    top: 2px;

    span {
        line-height:$font-size*1.2;
        display: table-row;
    }
}

.pending {
    td {
        border-left-color:$pending-color;
        &:last-child{
            color: $pending-color;
            div {
                @extend .circle-symbols;
                border: 2px solid darken($pending-color, 5%);
            }
        }
    }
}

.running {
    td {
        border-left-color:$running-color;
        &:last-child{
            color: $running-color;
            div {
                @extend .status;
                span {
                    font-weight: bold;
                    color: darken($running-color, 5%);
                }
            }
        }
    }
}

.passed {
    td {
        border-left-color:$passed-color;
        &:last-child{
            color: $passed-color;
            div {
                @extend .status;
                span {
                    font-weight: bold;
                    color: darken($passed-color, 5%);
                }
            }
        }
    }
}

.failed {
    td {
        border-left-color:$failed-color;
        &:last-child{
            color: $failed-color;
            div {
                @extend .status;
                span {
                    font-weight: bold;
                    color: darken($failed-color, 5%);
                }
            }
        }
    }
}

 .build-status {

     @include transition(all $animation-time * 2 linear);

     & .ng-enter,
     & .ng-enter.ng-enter-active {
         opacity: 0;
     }

     & .ng-leave.ng-leave-active {
         opacity: 1;
     }
 }

tr.list {
    &.passed, &.failed {
        cursor: pointer;
    }
}

 .list {
     line-height:40px;
     list-style:none;
     box-sizing:border-box;
 }

 .list.ng-move,
 .list.ng-enter,
 .list.ng-leave {
     @include transition(all linear $animation-time*2);
 }

 .list.ng-leave.ng-leave-active,
 .list.ng-move,
 .list.ng-enter {
     opacity:0;
 }

 .list.ng-leave,
 .list.ng-move.ng-move-active,
 .list.ng-enter.ng-enter-active {
     opacity:1;
 }
